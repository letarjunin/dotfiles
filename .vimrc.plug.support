" This will be included from the vimrc file and also will used to boot strap 
" all the plugins needed to get this 

" Plug Support {

    " Setup Plug Support {
        " The next three lines ensure that the ~/.vim/bundle/ system works
        " Load vim-plug
    " }

    call plug#begin('~/.vim/plugged')

    " Plug Support {
        Plug 'marcWeber/vim-addon-mw-utils'
        Plug 'tomtom/tlib_vim'
    " }

    " General Bundles {
        Plug 'junegunn/vim-plug'
        Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
        Plug 'spf13/vim-colors'
        Plug 'tpope/vim-surround'
        Plug 'tpope/vim-repeat'
        Plug 'rhysd/conflict-marker.vim'
        Plug 'jiangmiao/auto-pairs'
        Plug 'terryma/vim-multiple-cursors'
        Plug 'vim-scripts/sessionman.vim'
        "Plug 'matchit.zip'
        if (has("python") || has("python3")) && exists('g:spf13_use_powerline') && !exists('g:spf13_use_old_powerline')
            Plug 'Lokaltog/powerline', {'rtp':'/powerline/bindings/vim'}
        elseif exists('g:spf13_use_powerline') && exists('g:spf13_use_old_powerline')
            Plug 'Lokaltog/vim-powerline'
        else
            Plug 'vim-airline/vim-airline'
            Plug 'vim-airline/vim-airline-themes'
        endif
        Plug 'powerline/fonts'
        Plug 'bling/vim-bufferline'
        Plug 'easymotion/vim-easymotion'
        Plug 'jistr/vim-nerdtree-tabs', { 'on': 'NERDTreeToggle' }
        Plug 'flazz/vim-colorschemes'
        Plug 'mbbill/undotree'
        Plug 'nathanaelkane/vim-indent-guides'
        Plug 'mhinz/vim-signify'
        Plug 'osyo-manga/vim-over'
        Plug 'kana/vim-textobj-user'
        Plug 'kana/vim-textobj-indent'
        Plug 'gcmt/wildfire.vim'
        Plug 'terryma/vim-expand-region'
        Plug 'mhinz/vim-startify'
        Plug 'gregsexton/gitv', {'on': ['Gitv']}
        Plug 'benmills/vimux'
    " }

    " Writing {
        Plug 'reedes/vim-litecorrect'
        Plug 'reedes/vim-textobj-sentence'
        Plug 'reedes/vim-textobj-quote'
        Plug 'reedes/vim-wordy'
    " }

    " Programming {
        Plug 'scrooloose/syntastic'
        Plug 'tpope/vim-fugitive'
        Plug 'mattn/webapi-vim'
        Plug 'mattn/gist-vim'
        Plug 'scrooloose/nerdcommenter', { 'on': 'NERDTreeToggle' }
        Plug 'tpope/vim-commentary'
        Plug 'godlygeek/tabular'
        Plug 'kien/rainbow_parentheses.vim'
        Plug 'sheerun/vim-polyglot'
        Plug 'SirVer/ultisnips'
        if executable('ctags')
            Plug 'majutsushi/tagbar'
        endif
    " }

    " Snippets & AutoComplete {
        if (has("nvim") || !exists('g:not_installing'))
            Plug 'Shougo/neocomplcache'
            Plug 'Shougo/neosnippet'
            Plug 'Shougo/neosnippet-snippets'
            Plug 'honza/vim-snippets'
        endif
        if (!has("nvim") || !exists('g:not_installing'))
            Plug 'Shougo/neocomplete.vim'
            Plug 'Shougo/neosnippet'
            Plug 'Shougo/neosnippet-snippets'
            Plug 'honza/vim-snippets'
        endif
    " }

    " Python {
        " Pick either python-mode or pyflakes & pydoc
        Plug 'klen/python-mode', { 'for': 'python',  'branch': 'develop'}
        Plug 'yssource/python.vim', { 'for': 'python' }
    " }

        Plug 'Xuyuanp/nerdtree-git-plugin', { 'on': 'NERDTreeToggle' }
        Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
        Plug 'davidhalter/jedi-vim'
        Plug 'christoomey/vim-tmux-navigator'
        Plug 'wellle/tmux-complete.vim'
        Plug 'mhinz/vim-grepper', { 'on': ['Grepper', 'GrepperGit', '<plug>(GrepperOperator)'] }
        Plug 'morhetz/gruvbox'
        Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
        Plug 'junegunn/fzf.vim'

        call plug#end()
        let g:deoplete#enable_at_startup = 1
" }

